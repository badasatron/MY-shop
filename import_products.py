import pandas as pd
from main.models import Product, Category

def parse_price(price):
    try:
        return float(price)
    except (ValueError, TypeError):
        return None

def get_deepest_category(row):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É: category3 > category2 > category
    for level in ['category3', 'category2', 'category']:
        if level in row and pd.notna(row[level]):
            name_or_id = str(row[level]).strip()
            # –ü—Ä–æ–±—É–µ–º —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–π—Ç–∏ –ø–æ ID
            if name_or_id.isdigit():
                try:
                    return Category.objects.get(id=int(name_or_id))
                except Category.DoesNotExist:
                    continue
            # –ó–∞—Ç–µ–º –ø–æ –∏–º–µ–Ω–∏
            try:
                return Category.objects.get(name=name_or_id)
            except Category.DoesNotExist:
                continue
    return None

def import_products(filepath):
    df = pd.read_excel(filepath)
    success_count = 0
    fail_count = 0

    for i, row in df.iterrows():
        try:
            category = get_deepest_category(row)
            if not category:
                print(f"‚ùå [{i}] –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è '{row.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}' (ID: {row.get('category')})")
                fail_count += 1
                continue

            price = parse_price(row['price'])
            if price is None:
                print(f"‚ùå [{i}] –ù–µ–≤–∞–ª–∏–¥–Ω–∞—è —Ü–µ–Ω–∞: '{row['price']}' –¥–ª—è '{row['title']}'")
                fail_count += 1
                continue

            Product.objects.create(
                title=row['title'],
                price=price,
                image=row['image'],
                article=row['article'],
                brand=row['brand'],
                description=row['description'],
                category=category
            )
            success_count += 1
        except Exception as e:
            print(f"üí• [{i}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ '{row.get('title', '???')}': {e}")
            fail_count += 1

    print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {success_count}")
    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å: {fail_count}")
